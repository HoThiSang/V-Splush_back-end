{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger with Laravel",
        "version": "1.0.0"
    },
    "paths": {
        "/api/admin-show-all-banner": {
            "get": {
                "tags": [
                    "Banners"
                ],
                "summary": "Get all banners",
                "operationId": "4fd7be55b3ced94c5800d743b58e573c",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin-create-banner": {
            "post": {
                "tags": [
                    "Banners"
                ],
                "summary": "Create a new banner",
                "description": "Store a newly created resource in storage.",
                "operationId": "bdb1c1f00123d0eec681bd5ae7b18b94",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title of banner",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content",
                        "in": "query",
                        "description": "Content of banner",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sub_title",
                        "in": "query",
                        "description": "Subtitle of banner",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image_url": {
                                        "description": "Image of banner",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Banner created successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "400": {
                        "description": "Banner creation failed"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin-update-banner/{id}": {
            "post": {
                "tags": [
                    "Banners"
                ],
                "summary": "Update a banner by ID",
                "operationId": "35568b77f7218a615262e1a172b00a2c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the banner to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title of banner",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content",
                        "in": "query",
                        "description": "Content of banner",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sub_title",
                        "in": "query",
                        "description": "Subtitle of banner",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image_url": {
                                        "description": "Image of post",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Banner not found"
                    },
                    "422": {
                        "description": "Failed to update banner"
                    }
                }
            }
        },
        "/api/admin-delete-banner/{id}": {
            "delete": {
                "tags": [
                    "Banners"
                ],
                "summary": "Delete a banner by ID",
                "description": "Remove the specified resource from storage.",
                "operationId": "ba0b10ad34e35a97413fd27b61ff47f8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the banner to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Banner deleted successfully"
                    },
                    "404": {
                        "description": "Banner not found"
                    },
                    "500": {
                        "description": "Failed to delete banner"
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get all categories",
                "operationId": "2b04aaefff6b021b646062fa5cdd2af4",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/categories-create": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create a new category",
                "operationId": "0b7a883e64e69bb212913e31ba73fd54",
                "requestBody": {
                    "description": "Category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_name"
                                ],
                                "properties": {
                                    "category_name": {
                                        "type": "string",
                                        "example": "New Category"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/categories-update/{id}": {
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update a category by ID",
                "operationId": "6cb3dd8c17fffa2c27fe5fc83eb87077",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Category data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_name"
                                ],
                                "properties": {
                                    "category_name": {
                                        "type": "string",
                                        "example": "Updated Category"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/categories-delete/{id}": {
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete a category by ID",
                "operationId": "54a2d5591ede88f540a2b582cec86d95",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/show-all-comments": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get all comments",
                "operationId": "c31b29eabbe65b71937edf555dd841ca",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/delete-comment/{id}": {
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Delete a comment by ID",
                "operationId": "e6351f06420ce4999e38a4c429db36c3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the comment to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                }
            }
        },
        "/api/show-detail-comment/{id}": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Detail a comment by ID",
                "operationId": "a2c34b5c03d454c1f6103dddf6d13d6b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the comment to detail",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Comment not found"
                    }
                }
            }
        },
        "/api/update-comment/{id}": {
            "put": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update a comment by ID",
                "operationId": "31421f5be9a29fd3fe06c11c1bed4d2e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the comment to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Comment data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "Updated Comment"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Comment not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/admin-show-all-orders": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get all orders",
                "operationId": "00233ad633a3089ec10a30dde617a46b",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/admin-show-detail-order/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Detail a order by ID",
                "operationId": "8654127e6d7d298fa3c33cafd71a57b6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order to detail",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/api/admin-update-status-order/{id}": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Update a status order by ID",
                "operationId": "43770b848db31c3412ffa4037be003f7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the order to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "order data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "order_status"
                                ],
                                "properties": {
                                    "order_status": {
                                        "type": "string",
                                        "example": "ordered"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "order not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/admin-show-all-post": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get all posts",
                "operationId": "98b40a1b742456ba2ef1bb8f6913e24e",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/admin-create-post": {
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Create a new post",
                "operationId": "3a8fa4ec3a73ffb4707206d80d534aa3",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title of post",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content",
                        "in": "query",
                        "description": "Content of post",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image_url": {
                                        "description": "Image of post",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create new post successfully"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/api/admin-show-post/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Show a post by ID",
                "operationId": "169f0c83105d2498e7f988c41ea976a3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to show",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            }
        },
        "/api/admin-update-post/{id}": {
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update a category by ID",
                "operationId": "2e23834b44a5ec11f2c7c63a2bb98dff",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title of post",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content",
                        "in": "query",
                        "description": "Content of post",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image_url": {
                                        "description": "Image of post",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/admin-delete-post/{id}": {
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete a post by ID",
                "operationId": "ddb94d27f9a2d66e2c4d35cff3212dd8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            }
        },
        "/api/admin-product": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get all products",
                "operationId": "f7d79b06d551f46068555f2c75ee6cb0",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
    "/api/add-to-cart": {
            "post": {
                "tags": [
                    "Add to cart"
                ],
                "summary": "add to cart",
                "operationId": "9925138f13204f24a25b5cc813a0009b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Product Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/add-comment": {
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Create a new comment",
                "operationId": "cc700dca3d8bb28a66876976f18d5e5e",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "Product Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "user Id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Comment data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "New Comment"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/search-product/{keyword}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Search product by keyword",
                "operationId": "92465db5cfcf0677b6ac7cee7ca013bd",
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "path",
                        "description": "keyword of the product to search",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "19dc23451021d83e637ebee6b4b39994",
                "requestBody": {
                    "description": "User registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "phone",
                                    "address",
                                    "password",
                                    "confirmPassword"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Nhã Trần"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "sang@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1034567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "Sơn Trà-Đà Nẵng"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "confirmPassword": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "access_token_here"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please check your input data"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email already exists"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "773289c7969fb2619192f47e9de4faf0",
                "requestBody": {
                    "description": "Login data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "sang@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "access_token_here"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid login credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid login credentials"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "operationId": "311f9f4984477a7025380a00198a9651",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/create-wishlist": {
            "post": {
                "tags": [
                    "Wish list"
                ],
                "summary": "Create a new wish list",
                "description": "Store a newly created resource in storage.",
                "operationId": "88f5d5e9659388e4fd2a219d52616a5a",
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "query",
                        "description": "ID of the product",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product added to wishlist successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}